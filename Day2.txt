Python 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> list1=[1,2,3,4,5,6]
>>> list1
[1, 2, 3, 4, 5, 6]
>>> list[0]
list[0]
>>> type(list1)
<class 'list'>
>>> b=[1,True,"Hello",0.9]
>>> type(b)
<class 'list'>
>>> b
[1, True, 'Hello', 0.9]
>>> #List is collection of data which is ordered and indexed .this DS is created using [] and can be indexed as its sequentially stored in memory.
>>> len(list1)
6
>>> len(b)
4
>>> #we can access elements by the index
>>> 
>>> b[0]
1
>>> b[1]
True
>>> b[99]
Traceback (most recent call last):
  File "<pyshell#14>", line 1, in <module>
    b[99]
IndexError: list index out of range
>>> #index tarts with 0.
>>> #-ve indexing is also there
>>> b[-1]
0.9
>>> b[-3]
True
>>> b=[10,20,30,40,50]
>>> for index in b:
	print(index)

	
10
20
30
40
50
>>> for index in range(-1,-(len(b)),1)
SyntaxError: invalid syntax
>>> for index in range(-1,-(len(b)),1):
	print(b[index])

	
>>> 
>>> for index in range(0,(len(b)),-1):
	print(b[index])

	
>>> for index in range(0,len(b),-1):
	print(b[index])

	
>>> 
>>> for index in range(len(b)-1,0,-1):
	print(b[index])

	
50
40
30
20
>>> for index in range(len(b)-1,0,-1):
	print(b[index])

	
50
40
30
20
>>> for index in range(len(b)-1,-1,-1):
	print(b[index])

	
50
40
30
20
10
>>> for index in range(1,(len(b)),1):
	print(b[-index])

	
50
40
30
20
>>> for index in range(1,(len(b))+1,1):
	print(b[-index])

	
50
40
30
20
10
>>> print(b[0,5])
Traceback (most recent call last):
  File "<pyshell#43>", line 1, in <module>
    print(b[0,5])
TypeError: list indices must be integers or slices, not tuple
>>> print(b[0:5])
[10, 20, 30, 40, 50]
>>> print(b[0:3])
[10, 20, 30]
>>> print(b[0:5:2])
[10, 30, 50]
>>> print(b[0:5:])
[10, 20, 30, 40, 50]
>>> print(b[0:5:1])
[10, 20, 30, 40, 50]
>>> print(b[0:5:3])
[10, 40]
>>> print(b[::])
[10, 20, 30, 40, 50]
>>> print(b[2:5])
[30, 40, 50]
>>> [30, 40, 50]
[30, 40, 50]
>>> b
[10, 20, 30, 40, 50]
>>> b[0:5:-1]
[]
>>> 
>>> b[5:0:-1]
[50, 40, 30, 20]
>>> b[4:-1:-1]
[]
>>> b[5:-1:-1]
[]
>>> b[5:0:-1]
[50, 40, 30, 20]
>>> b[5:-1:-1]
[]
>>> b[-1:-5:1]
[]
>>> b[-1:-5:-1]
[50, 40, 30, 20]
>>> b[-1:-6:-1]
[50, 40, 30, 20, 10]
>>> b[::-1]
[50, 40, 30, 20, 10]
>>>  for i in a:
	 
SyntaxError: unexpected indent
>>> for i in b:
	print(b[i])

	
Traceback (most recent call last):
  File "<pyshell#68>", line 2, in <module>
    print(b[i])
IndexError: list index out of range
>>> b
[10, 20, 30, 40, 50]
>>> for index in b:
	print(b[index])

	
Traceback (most recent call last):
  File "<pyshell#72>", line 2, in <module>
    print(b[index])
IndexError: list index out of range
>>> for index in b:
	print(index)

	
10
20
30
40
50
>>> b[0]= 100
>>> b
[100, 20, 30, 40, 50]
>>> # hence list is mutable
>>> a
Traceback (most recent call last):
  File "<pyshell#78>", line 1, in <module>
    a
NameError: name 'a' is not defined
>>> a=[1,2,3,4,5]
>>> a+b
[1, 2, 3, 4, 5, 100, 20, 30, 40, 50]
>>> x=[7,2,8,13,9,5]
>>> x
[7, 2, 8, 13, 9, 5]
>>> for i in x:
	if(i%2==1):
		print i
		
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(i)?
>>> 
>>> for i in x:
	if(i%2==1):
		print (i)

		
7
13
9
5
>>> for i in x:
	ans=1;
	for i in range(i,1,-1):
		ans = ans*i
	else:
		print(ans)

		
5040
2
40320
6227020800
362880
120
>>> x
[7, 2, 8, 13, 9, 5]
>>> for i in x:
	ans=1;
	for i in range(i,0,-1):
		ans = ans*i
	else:
		print(ans)

		
5040
2
40320
6227020800
362880
120
>>> # "del" used to clear all the data of list
>>> x
[7, 2, 8, 13, 9, 5]
>>> for element in x:
	isPrime=1
	for i in range(2,element):
		if(element%2==0):
			isPrime=0
			break
	if(isPrime):
		print("Prime")
	else:
		print("Not Prime")

		
Prime
Prime
Not Prime
Prime
Prime
Prime
>>> for element in x:
	isPrime=1
	for i in range(2,element):
		if(element%i==0):
			isPrime=0
			break
	if(isPrime):
		print("Prime")
	else:
		print("Not Prime")

		
Prime
Prime
Not Prime
Prime
Not Prime
Prime
>>> for element in x:
	isPrime=1
	for i in range(2,int(element/2)):
		if(element%i==0):
			isPrime=0
			break
	if(isPrime):
		print("Prime")
	else:
		print("Not Prime")

		
Prime
Prime
Not Prime
Prime
Not Prime
Prime
>>> x
[7, 2, 8, 13, 9, 5]
>>> y=[7,2,8,13,9,5]
>>> y
[7, 2, 8, 13, 9, 5]
>>> x==y
True
>>> for i in range(0,len(x)):
	if(x[i]!=y[i]):
		print("Not Equal")
		break

	
>>> for i in range(0,len(x)):
	if(x[i]!=y[i]):
		print("Not Equal")
		break
	else:
		print("Equal")

		
Equal
Equal
Equal
Equal
Equal
Equal
>>> for i in range(0,len(x)):
	if(x[i]!=y[i]):
		print("Not Equal")
		break
else:
	print("Equal")

	
Equal
>>> for i in range(0,len(x)):
	found = 0
	for i in range(0,len(y))
	
SyntaxError: invalid syntax
>>> for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0)
	
SyntaxError: invalid syntax
>>> for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0):
		print ("Not Equal")
print("Equal")
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
	for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0):
		print ("Not Equal")
		break
print("Equal")
SyntaxError: expected an indented block
>>> if(len(x) != len(y)):
	print("Not Equal")
	for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0):
		print ("Not Equal")
		break
	
SyntaxError: expected an indented block
>>> if(len(x) != len(y)):
	print("Not Equal")
	for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0):
		print ("Not Equal")
		break
	
SyntaxError: expected an indented block
>>> if(len(x) != len(y)):
	print("Not Equal")
	for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0):
		print ("Not Equal")
		break
	
SyntaxError: expected an indented block
>>> z=[1,1,2,4,5,5]
>>> z
[1, 1, 2, 4, 5, 5]
>>> for i n z:
	
SyntaxError: invalid syntax
>>> for i in range(0,len(z)):
	temp1 = z[i+1,len(z)+1]
	temp2 = z[0,i];
	if(z[i] not in temp1 || z[i] not in temp2):
		
SyntaxError: invalid syntax
>>> for i in range(0,len(z)):
	temp1 = z[i+1,len(z)+1]
	temp2 = z[0i]
	if(z[i] not in temp1 || z[i] not in temp2):
		
SyntaxError: invalid syntax
>>> for i in range(0,len(z)):
	temp1 = z[i+1:len(z)+1]
	temp2 = z[0:i]
	if(z[i] not in temp1 || z[i] not in temp2):
		
SyntaxError: invalid syntax
>>> for i in range(0,len(z)):
	temp1 = z[i+1:len(z)+1]
	temp2 = z[0:i]
	if(z[i] not in temp1 or z[i] not in temp2):
		Print(z[i])

		
Traceback (most recent call last):
  File "<pyshell#160>", line 5, in <module>
    Print(z[i])
NameError: name 'Print' is not defined
>>> for i in range(0,len(z)):
	temp1 = z[i+1:len(z)+1]
	temp2 = z[0:i]
	if(z[i] not in temp1 or z[i] not in temp2):
		print(z[i])

		
1
1
2
4
5
5
>>> for i in range(0,len(z)):
	temp1 = z[i+1:len(z)+1]
	temp2 = z[0:i]
	print(temp1)
	print(temp2)
	if(z[i] not in temp1 or z[i] not in temp2):
		print(z[i])

		
[1, 2, 4, 5, 5]
[]
1
[2, 4, 5, 5]
[1]
1
[4, 5, 5]
[1, 1]
2
[5, 5]
[1, 1, 2]
4
[5]
[1, 1, 2, 4]
5
[]
[1, 1, 2, 4, 5]
5
>>> for i in range(0,len(z)):
	temp1 = z[i+1:len(z)+1]
	temp2 = z[0:i]
	print(temp1)
	print(temp2)
	print(z[i])
	if(z[i] not in temp1 or z[i] not in temp2):
		print(z[i])

		
[1, 2, 4, 5, 5]
[]
1
1
[2, 4, 5, 5]
[1]
1
1
[4, 5, 5]
[1, 1]
2
2
[5, 5]
[1, 1, 2]
4
4
[5]
[1, 1, 2, 4]
5
5
[]
[1, 1, 2, 4, 5]
5
5
>>> for i in range(0,len(z)):
	temp1 = z[i+1:len(z)+1]
	temp2 = z[0:i]
	print(temp1)
	print(temp2)
	print(z[i])
	if(z[i] not in temp1 and z[i] not in temp2):
		print(z[i])

		
[1, 2, 4, 5, 5]
[]
1
[2, 4, 5, 5]
[1]
1
[4, 5, 5]
[1, 1]
2
2
[5, 5]
[1, 1, 2]
4
4
[5]
[1, 1, 2, 4]
5
[]
[1, 1, 2, 4, 5]
5
>>> for i in range(0,len(z)):
	temp1 = z[i+1:len(z)+1]
	temp2 = z[0:i]
	#print(temp1)
	#print(temp2)
	#print(z[i])
	if(z[i] not in temp1 and z[i] not in temp2):
		print(z[i])

		
2
4
>>> z
[1, 1, 2, 4, 5, 5]
>>> for i in range(0,len(z)):
	temp2 = z[0:i]
	#print(temp1)
	#print(temp2)
	#print(z[i])
	if(z[i] not in temp2):
		print(z[i])

		
1
2
4
5
>>> for i in range(0,len(z)):
	temp2 = z[0:i]
	if(z[i] not in temp2):
		print(z[i])

		
1
2
4
5
>>> if(len(x) != len(y)):
	print("Not Equal")
	for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		
SyntaxError: expected an indented block
>>> if(len)if(len(x) != len(y)):
	print("Not Equal")
	for inn in range(0,len(x)):
		found = 0
		for i in range(0,len(y)):
			if(x[inn] == y[i]):
				found = 1
				break
		if(found == 0):
			print ("Not Equal")
			break
		
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0):
		print ("Not Equal")
		break
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		if(x[inn] == y[i]):
			found = 1
			break
	if(found == 0):
		print ("Not Equal")
		break
	
SyntaxError: invalid syntax
>>> x
[7, 2, 8, 13, 9, 5]
>>> y
[7, 2, 8, 13, 9, 5]
>>> if(len(x) != len(y)):
	print("Not Equal")
for ele in x:
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
for ele in x:
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
for el in x:
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
for el in x:
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
    for el in x:
	    
SyntaxError: unindent does not match any outer indentation level
>>> if(len(x) != len(y)):
	print("Not Equal")
    for el in x:
	    
SyntaxError: unindent does not match any outer indentation level
>>> if(len(x) != len(y)):
	print("Not Equal")
for el in x :
	
SyntaxError: invalid syntax
>>> 	if(len(x) != len(y)):
	print("Not Equal")
	for el in x :
		
SyntaxError: unexpected indent
>>> if(len(x) != len(y))
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
for i in x:
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
	break
for i in ra:
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
	return
for i in ra:
	
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")

>>> x
[7, 2, 8, 13, 9, 5]
>>> y
[7, 2, 8, 13, 9, 5]
>>> if(len(x) != len(y)):
	print("Can't Perform operatio")
	break
SyntaxError: 'break' outside loop
>>> if(len(x) != len(y)):
	print("Can't Perform operatio")
	return
SyntaxError: 'return' outside function
>>> if(len(x) != len(y)):
	print("Can't Perform operatio")
else:
	fori in range(0,len(x)):
		
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Can't Perform operatio")
else:
	for i in range(0,len(x)):
		print(x[i] + y[i])

		
14
4
16
26
18
10
>>> if(len(x) != len(y)):
	print("Not Equal")
else:
	for inn in range(0,len(x)):
	found = 0
	for i in range(0,len(y)):
		
SyntaxError: expected an indented block
>>> if(len(x) != len(y)):
	print("Not Equal")
else:
	for inn in range(0,len(x)):
		found = 0
		for i in range(0,len(y)):
			if(x[inn] == y[i]):
				found = 1
				break;
		if(found == 0)
		
SyntaxError: invalid syntax
>>> if(len(x) != len(y)):
	print("Not Equal")
else:
	for inn in range(0,len(x)):
		found = 0
		for i in range(0,len(y)):
			if(x[inn] == y[i]):
				found = 1
				break;
		if(found == 0):
			print("not equal")
			break
	else:
		print("Equal")

		
Equal
>>> x
[7, 2, 8, 13, 9, 5]
>>> y
[7, 2, 8, 13, 9, 5]
>>> y[6] = 7
Traceback (most recent call last):
  File "<pyshell#228>", line 1, in <module>
    y[6] = 7
IndexError: list assignment index out of range
>>> y.append(9)
>>> y
[7, 2, 8, 13, 9, 5, 9]
>>> if(len(x) != len(y)):
	print("Not Equal")
else:
	for inn in range(0,len(x)):
		found = 0
		for i in range(0,len(y)):
			if(x[inn] == y[i]):
				found = 1
				break;
		if(found == 0):
			print("not equal")
			break
	else:
		print("Equal")

		
Not Equal
>>> x.append(9)
>>> if(len(x) != len(y)):
	print("Not Equal")
else:
	for inn in range(0,len(x)):
		found = 0
		for i in range(0,len(y)):
			if(x[inn] == y[i]):
				found = 1
				break;
		if(found == 0):
			print("not equal")
			break
	else:
		print("Equal")

		
Equal
>>> x.append(6)
>>> y.append(14)
>>> if(len(x) != len(y)):
	print("Not Equal")
else:
	for inn in range(0,len(x)):
		found = 0
		for i in range(0,len(y)):
			if(x[inn] == y[i]):
				found = 1
				break;
		if(found == 0):
			print("not equal")
			break
	else:
		print("Equal")

		
not equal
>>> y.insert(1,0)
>>> y
[7, 0, 2, 8, 13, 9, 5, 9, 14]
>>> y.pop
<built-in method pop of list object at 0x000001CA6AC59FC0>
>>> y.pop()
14
>>> y
[7, 0, 2, 8, 13, 9, 5, 9]
>>> y.remove(100)
Traceback (most recent call last):
  File "<pyshell#245>", line 1, in <module>
    y.remove(100)
ValueError: list.remove(x): x not in list
>>> y.remove(0)
>>> y
[7, 2, 8, 13, 9, 5, 9]
>>> x
[7, 2, 8, 13, 9, 5, 9, 6]
>>> u=x.copy()
>>> u
[7, 2, 8, 13, 9, 5, 9, 6]
>>> v=x
>>> v
[7, 2, 8, 13, 9, 5, 9, 6]
>>> b.clear()
>>> a
[1, 2, 3, 4, 5]
>>> c
Traceback (most recent call last):
  File "<pyshell#255>", line 1, in <module>
    c
NameError: name 'c' is not defined
>>> x
[7, 2, 8, 13, 9, 5, 9, 6]
>>> v
[7, 2, 8, 13, 9, 5, 9, 6]
>>> x.append(00)
>>> x
[7, 2, 8, 13, 9, 5, 9, 6, 0]
>>> v
[7, 2, 8, 13, 9, 5, 9, 6, 0]
>>> u
[7, 2, 8, 13, 9, 5, 9, 6]
>>> u.clear()
>>> u
[]
>>> a.count(9)
0
>>> u.count(9)
0
>>> v.count(9)
2
>>> v.index(9)
4
>>> x
[7, 2, 8, 13, 9, 5, 9, 6, 0]
>>> x.extend([11,17])
>>> x
[7, 2, 8, 13, 9, 5, 9, 6, 0, 11, 17]
>>> p = []
>>> p
[]
>>> q=list()
>>> q
[]
>>> x.sort()
>>> x
[0, 2, 5, 6, 7, 8, 9, 9, 11, 13, 17]
>>> x.sort(reverse=True)
>>> x
[17, 13, 11, 9, 9, 8, 7, 6, 5, 2, 0]
>>> x = [1,3,2,1,5,2,6]
>>> x
[1, 3, 2, 1, 5, 2, 6]
>>> for i in x:
	if(x.count(i)>1):
		count = x.count
		while(count>1):
			x.remove()

			
Traceback (most recent call last):
  File "<pyshell#290>", line 4, in <module>
    while(count>1):
TypeError: '>' not supported between instances of 'builtin_function_or_method' and 'int'
>>> for i in x:
	if(x.count(i)>1):
		count = x.count
		while(count>1):
			x.remove()
			count = count-1

			
Traceback (most recent call last):
  File "<pyshell#293>", line 4, in <module>
    while(count>1):
TypeError: '>' not supported between instances of 'builtin_function_or_method' and 'int'
>>> for i in x:
	if(x.count(i)>1):
		count = x.count()
		while(count>1):
			x.remove()
			count = count-1

			
Traceback (most recent call last):
  File "<pyshell#295>", line 3, in <module>
    count = x.count()
TypeError: list.count() takes exactly one argument (0 given)
>>> for i in x:
	if(x.count(i)>1):
		count = x.count(i)
		while(count>1):
			x.remove()
			count = count-1

			
Traceback (most recent call last):
  File "<pyshell#297>", line 5, in <module>
    x.remove()
TypeError: list.remove() takes exactly one argument (0 given)
>>> for i in x:
	if(x.count(i)>1):
		count = x.count(i)
		while(count>1):
			x.remove(i)
			count = count-1

			
>>> x
[3, 1, 5, 2, 6]
>>> x.append([5,5,5,6,6])
>>> x
[3, 1, 5, 2, 6, [5, 5, 5, 6, 6]]
>>> y =[3,1,5,2,6,5,5,5,6,6]
>>> y
[3, 1, 5, 2, 6, 5, 5, 5, 6, 6]
>>> for i in x:
	if(x.count(i)>1):
		count = x.count(i)
		while(count>1):
			x.remove(i)
			count = count-1

			
>>> y
[3, 1, 5, 2, 6, 5, 5, 5, 6, 6]
>>> for i in y:
	if(y.count(i)>1):
		count = y.count(i)
		while(count>1):
			y.remove(i)
			count = count-1

			
>>> y
[3, 1, 2, 5, 6]
>>> p=[]
>>> p
[]
>>> for x in range(1,101):
	if (x%2!=0):
		p.append(x)

		
>>> p
[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99]
>>> q=[]
>>> for x in range(2,101):
	is_prime=True
	for y in (2,int(x/2)):
		if (x%y==0):
			is_prime=False
			break
	if(is_prime):
		q.append(x)

		
>>> q
[5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99]
>>> for x in range(2,101):
	is_prime=True
	for y in range(2,int(x/2)):
		if (x%y==0):
			is_prime=False
			break
	if(is_prime):
		q.append(x)

		
>>> q
[5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 2, 3, 4, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
>>> x
100
>>> y
2
>>> a
[1, 2, 3, 4, 5]
>>> a[0]+a[len(a)-1]
6
>>> a
[1, 2, 3, 4, 5]
>>> a[0] = a[0]+a[len(a)-1]
>>> a
[6, 2, 3, 4, 5]
>>> a[len(a)-1] = a[0]-a[len(a)-1]
>>> a
[6, 2, 3, 4, 1]
>>> a[0]=a[0]-a[len(a)-1]
>>> a
[5, 2, 3, 4, 1]
>>> p=[]
>>> p
[]
>>> for i in range(1,101):
	p.append(i)

	
>>> p
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
>>> l1=[]
>>> l2=[]
>>> l3=[]
>>> l1
[]
>>> l2
[]
>>> l3
[]
>>> for i in range p:
	
SyntaxError: invalid syntax
>>> for i in p:
	if(i%2 == 0):
		l1.append(i)
	else:
		l2.append(i)
		isPrime = true
		for j in range(2,int(i/2)):
			if(i%j==0):
				isPrime = false
				break;
		if(isPrime):
			l3.append(i)
else:
	odd = touple(l1)
	even = touple(l2)
	prime= touple(l3)
	print(odd)
	print(even)
	print(prime)

	
Traceback (most recent call last):
  File "<pyshell#373>", line 6, in <module>
    isPrime = true
NameError: name 'true' is not defined
>>> for i in p:
	if(i%2 == 0):
		l1.append(i)
	else:
		l2.append(i)
		isPrime = True
		for j in range(2,int(i/2)):
			if(i%j==0):
				isPrime = False
				break;
		if(isPrime):
			l3.append(i)
else:
	odd = touple(l1)
	even = touple(l2)
	prime= touple(l3)
	print(odd)
	print(even)
	print(prime)

	
Traceback (most recent call last):
  File "<pyshell#375>", line 14, in <module>
    odd = touple(l1)
NameError: name 'touple' is not defined
>>> for i in p:
	if(i%2 == 0):
		l1.append(i)
	else:
		l2.append(i)
		isPrime = True
		for j in range(2,int(i/2)):
			if(i%j==0):
				isPrime = False
				break;
		if(isPrime):
			l3.append(i)
else:
	odd = tuple(l1)
	even = tuple(l2)
	prime= tuple(l3)
	print(odd)
	print(even)
	print(prime)

	
(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100)
(1, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99)
(1, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 1, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)
>>> 
for i in p:
	if(i%2 == 0):
		l1.append(i)
	else:
		l2.append(i)
		isPrime = True
		for j in range(2,int(i/2)):
			if(i%j==0):
				isPrime = False
				break;
		if(isPrime):
			l3.append(i)
else:
	odd = tuple(l1)
	even = tuple(l2)
	prime= tuple(l3)
	print("ODD")
	print(odd)
	print("EVEN")
	print(even)
	print("PRIME")
	print(prime)

	
ODD
(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100)
EVEN
(1, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99)
PRIME
(1, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 1, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 1, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)
>>> Q
Traceback (most recent call last):
  File "<pyshell#380>", line 1, in <module>
    Q
NameError: name 'Q' is not defined
>>> q
[5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 2, 3, 4, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
>>> q=[]
>>> q
[]
>>> for x in range(2,101):
	is_prime=True
	for y in range(2,int(x/2)):
		if (x%y==0):
			is_prime=False
			break
	if(is_prime):
		q.append(x)

		
>>> q
[2, 3, 4, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
>>> for x in range(2,101):
	is_prime=True
	for y in range(2,int(x/2)):
		if (x%y==0):
			is_prime=False
			break
	if(is_prime):
		q.append(x)

		
>>> q
[2, 3, 4, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 2, 3, 4, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
>>> String1="Hello"
>>> String1="""Hello
World
!!!!!!!!!"""
>>> print(String1)
Hello
World
!!!!!!!!!
>>> String1
'Hello\nWorld\n!!!!!!!!!'
>>> for x in range(0,len(String1)-1):
	print(String[x])

	
Traceback (most recent call last):
  File "<pyshell#398>", line 2, in <module>
    print(String[x])
NameError: name 'String' is not defined
>>> for x in range(0,len(String1)-1):
	print(String1[x])

	
H
e
l
l
o


W
o
r
l
d


!
!
!
!
!
!
!
!
>>> for x in range(len(String1),-1,-1):
	print(String1[-x])

	
H
e
l
l
o


W
o
r
l
d


!
!
!
!
!
!
!
!
!
H
>>> for x in range(len(String1),-1,1):
	print(String1[-x])

	
>>> for x in range(len(String1),-1,-1):
	print(String1[-x])

	
H
e
l
l
o


W
o
r
l
d


!
!
!
!
!
!
!
!
!
H
>>> for x in range(0,len(String1),-1,-1):
	print(String1[x])

	
Traceback (most recent call last):
  File "<pyshell#408>", line 1, in <module>
    for x in range(0,len(String1),-1,-1):
TypeError: range expected at most 3 arguments, got 4
>>> for x in range(0,len(String1)-1,-1):
	print(String1[x])

	
>>> for x in range(len(String1)-1,-1,1):
	print(String1[-x])

	
>>> for x in range(len(String1)-2,-1,1):
	print(String1[-x])

	
>>> print(len(String1))
21
>>> for x in range(len(String1)-2,-1,1):
	print(String1[-x])

	
>>> for x in range(-1,-len(String1),-1):
	print(String1[x])

	
!
!
!
!
!
!
!
!
!


d
l
r
o
W


o
l
l
e
>>> #slicing can also be used
>>> String1
'Hello\nWorld\n!!!!!!!!!'
>>> String1.count("!!")
4
>>> String1.count("!!!")
3

>>> String1.find(e)
Traceback (most recent call last):
  File "<pyshell#424>", line 1, in <module>
    String1.find(e)
NameError: name 'e' is not defined
>>> String1.find("e")
1
>>> 
>>> String1.find("x")
-1
>>> String1.index("x")
Traceback (most recent call last):
  File "<pyshell#428>", line 1, in <module>
    String1.index("x")
ValueError: substring not found
>>> str1="12b"
>>> str1.isaplhanumeric()
Traceback (most recent call last):
  File "<pyshell#430>", line 1, in <module>
    str1.isaplhanumeric()
AttributeError: 'str' object has no attribute 'isaplhanumeric'
>>> str1.isalnum()
True
>>> str1.isdigit()
False
>>> str2="12"
>>> str2.isnumeric()
True
>>> str2.isdigit()
True
>>> str2.isalpha()
False
>>> x="123@hello"
>>> x.isalnum()
False
>>> str2.isalpha()
False
>>> y="h ello"
>>> y.isaplha()
Traceback (most recent call last):
  File "<pyshell#441>", line 1, in <module>
    y.isaplha()
AttributeError: 'str' object has no attribute 'isaplha'
>>> y.isalpha()
False
>>> 
>>> x="12"
>>> x.isalnum()
True
>>> String1="Hello how are you "
>>> String1="hello how are you "
>>> string1[1::]
Traceback (most recent call last):
  File "<pyshell#448>", line 1, in <module>
    string1[1::]
NameError: name 'string1' is not defined
>>> String1[1::]
'ello how are you '
>>> String1
'hello how are you '
>>> str1="Hello World"
>>> list1=str1.split(" ")
>>> list1
['Hello', 'World']
>>> for x in list1:
	x.reverse()

	
Traceback (most recent call last):
  File "<pyshell#456>", line 2, in <module>
    x.reverse()
AttributeError: 'str' object has no attribute 'reverse'
>>> for x in list1:
	x[::-1]

	
'olleH'
'dlroW'
>>> list1
['Hello', 'World']
>>> list2=[]
for x in list1:
	list2.append(x[::-1])
	
SyntaxError: multiple statements found while compiling a single statement
>>> for x in list1:
	x[::-1]
" ".join(list1)
SyntaxError: invalid syntax
>>> list2=[]
>>> for x in list1:
	list2.append(x[::-1])

	
>>> list2
['olleH', 'dlroW']
>>> " ".join(list2)
'olleH dlroW'
>>> 